# -*- coding: utf-8 -*-
"""Seizure model on coral board

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FL6sbEQlHV7DYEyTCnmYUhtvUVdSY6yT
"""

import numpy as np
import time
import sys
from pycoral.utils.edgetpu import make_interpreter

# Load data and model
try:
    X_test = np.load('selected_features.npy')
    y_test = np.load('selected_labels.npy')
except Exception as e:
    print(f"Error loading files: {e}")
    sys.exit(1)

interpreter = make_interpreter('model_int8_edgetpu.tflite')
interpreter.allocate_tensors()

# Get model details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Preprocessing
if X_test.shape[1:] == (18, 640):
    X_test = np.ascontiguousarray(X_test.transpose(0, 2, 1))

input_quant = input_details[0]['quantization']
if input_details[0]['dtype'] == np.int8:
    scale, zero_point = input_quant[0], input_quant[1]
    X_test = np.clip(np.round(X_test/scale + zero_point), -128, 127).astype(np.int8)

# Inference loop
correct = 0
total_time = 0

print("\nRunning seizure detection:\n")
for idx in range(len(X_test)):
    input_data = np.expand_dims(X_test[idx], axis=0)
    interpreter.set_tensor(input_details[0]['index'], input_data)

    start_time = time.monotonic()
    interpreter.invoke()
    inference_time = (time.monotonic() - start_time) * 1000
    total_time += inference_time

    output = interpreter.get_tensor(output_details[0]['index'])

    # Dequantize if needed
    if output_details[0]['dtype'] == np.int8:
        output_scale, output_zero = output_details[0]['quantization']
        output = (output.astype(np.float32) - output_zero) * output_scale

    pred = np.argmax(output)
    true_label = y_test[idx]

    # Print sample result
    status = "SEIZURE DETECTED" if pred == 1 else "SEIZURE NOT DETECTED"
    print(f"Sample {idx+1}: {status} | {inference_time:.2f}ms")

    if pred == true_label:
        correct += 1

# Final results
accuracy = (correct / len(y_test)) * 100
avg_time = total_time / len(y_test)

print("\n-----------------------------")
print(f" Accuracy: {accuracy:.2f}%")
print(f" Average Inference Time: {avg_time:.2f}ms")
print("-----------------------------")